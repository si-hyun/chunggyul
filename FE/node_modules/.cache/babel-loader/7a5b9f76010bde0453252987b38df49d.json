{"ast":null,"code":"import _regeneratorRuntime from \"C:/Hackathon/chunggyul/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Hackathon/chunggyul/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Hackathon/chunggyul/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"LoginPage\",\n  data: function data() {\n    return {\n      customer: {\n        customer_id: null,\n        customer_pw: null\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState(\"customerStore\", [\"isLogin\", \"isLoginError\"])),\n  methods: _objectSpread(_objectSpread({}, mapActions(\"customerStore\", [\"customerConfirm\"])), {}, {\n    confirm: function confirm() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.customerConfirm(_this.customer);\n\n              case 2:\n                if (_this.isLogin) {\n                  _this.$router.push({\n                    name: \"home\"\n                  });\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AAEA;EACAA,iBADA;EAEAC,IAFA,kBAEA;IACA;MAEAC;QACAC,iBADA;QAEAC;MAFA;IAFA;EAOA,CAVA;EAWAC,4BACAC,sDADA,CAXA;EAcAC,yCACAC,gDADA;IAEAC,OAFA,qBAEA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,qCADA;;cAAA;gBAEA;kBACA;oBAAAT;kBAAA;gBACA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA;EAPA;AAdA","names":["name","data","customer","customer_id","customer_pw","computed","mapState","methods","mapActions","confirm"],"sourceRoot":"src/pages","sources":["LoginPage.vue"],"sourcesContent":["<template>\r\n  <container class=\"bv-example-row mt-3\">\r\n        <h3>로그인</h3>\r\n          <form class=\"text-left\">\r\n            <show variant=\"danger\" v-if=\"isLoginError\"\r\n              >아이디 또는 비밀번호를 확인하세요.</show\r\n            >\r\n            <form-group label=\"아이디:\" label-for=\"customer_id\">\r\n              <form-input\r\n                id=\"customer_id\"\r\n                v-model=\"customer.customter_id\"\r\n                required\r\n                placeholder=\"아이디 입력....\"\r\n                @keyup.enter=\"confirm\"\r\n              ></form-input>\r\n            </form-group>\r\n            <form-group label=\"비밀번호:\" label-for=\"customer_pw\">\r\n              <form-input\r\n                type=\"password\"\r\n                id=\"customer_pw\"\r\n                v-model=\"customer.customer_pw\"\r\n                required\r\n                placeholder=\"비밀번호 입력....\"\r\n                @keyup.enter=\"confirm\"\r\n              ></form-input>\r\n            </form-group>\r\n            <button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              class=\"m-1\"\r\n              @click=\"confirm\"\r\n              >로그인</button\r\n            >\r\n          <form>\r\n  </container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"LoginPage\",\r\n  data() {\r\n    return {\r\n\r\n      customer: {\r\n        customer_id: null,\r\n        customer_pw: null,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(\"customerStore\", [\"isLogin\", \"isLoginError\"]),\r\n  },\r\n  methods: {\r\n    ...mapActions(\"customerStore\", [\"customerConfirm\"]),\r\n    async confirm() {\r\n      await this.customerConfirm(this.customer);\r\n      if (this.isLogin) {\r\n        this.$router.push({ name: \"home\" });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}