{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nvar Vue = require('vue');\n\nVue = 'default' in Vue ? Vue['default'] : Vue;\nvar version = '2.2.2';\nvar compatible = /^2\\./.test(Vue.version);\n\nif (!compatible) {\n  Vue.util.warn('VueClickaway ' + version + ' only supports Vue 2.x, and does not support Vue ' + Vue.version);\n} // @SECTION: implementation\n\n\nvar HANDLER = '_vue_clickaway_handler';\n\nfunction bind(el, binding, vnode) {\n  unbind(el);\n  var vm = vnode.context;\n  var callback = binding.value;\n\n  if (typeof callback !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      Vue.util.warn('v-' + binding.name + '=\"' + binding.expression + '\" expects a function value, ' + 'got ' + callback);\n    }\n\n    return;\n  } // @NOTE: Vue binds directives in microtasks, while UI events are dispatched\n  //        in macrotasks. This causes the listener to be set up before\n  //        the \"origin\" click event (the event that lead to the binding of\n  //        the directive) arrives at the document root. To work around that,\n  //        we ignore events until the end of the \"initial\" macrotask.\n  // @REFERENCE: https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\n  // @REFERENCE: https://github.com/simplesmiler/vue-clickaway/issues/8\n\n\n  var initialMacrotaskEnded = false;\n  setTimeout(function () {\n    initialMacrotaskEnded = true;\n  }, 0);\n\n  el[HANDLER] = function (ev) {\n    // @NOTE: this test used to be just `el.containts`, but working with path is better,\n    //        because it tests whether the element was there at the time of\n    //        the click, not whether it is there now, that the event has arrived\n    //        to the top.\n    // @NOTE: `.path` is non-standard, the standard way is `.composedPath()`\n    var path = ev.path || (ev.composedPath ? ev.composedPath() : undefined);\n\n    if (initialMacrotaskEnded && (path ? path.indexOf(el) < 0 : !el.contains(ev.target))) {\n      return callback.call(vm, ev);\n    }\n  };\n\n  document.documentElement.addEventListener('click', el[HANDLER], false);\n}\n\nfunction unbind(el) {\n  document.documentElement.removeEventListener('click', el[HANDLER], false);\n  delete el[HANDLER];\n}\n\nvar directive = {\n  bind: bind,\n  update: function update(el, binding) {\n    if (binding.value === binding.oldValue) return;\n    bind(el, binding);\n  },\n  unbind: unbind\n};\nvar mixin = {\n  directives: {\n    onClickaway: directive\n  }\n};\nexports.version = version;\nexports.directive = directive;\nexports.mixin = mixin;","map":{"version":3,"names":["Vue","require","version","compatible","test","util","warn","HANDLER","bind","el","binding","vnode","unbind","vm","context","callback","value","process","env","NODE_ENV","name","expression","initialMacrotaskEnded","setTimeout","ev","path","composedPath","undefined","indexOf","contains","target","call","document","documentElement","addEventListener","removeEventListener","directive","update","oldValue","mixin","directives","onClickaway","exports"],"sources":["C:/Hackathon/chunggyul/node_modules/vue-clickaway/dist/vue-clickaway.common.js"],"sourcesContent":["'use strict';\r\n\r\nvar Vue = require('vue');\r\nVue = 'default' in Vue ? Vue['default'] : Vue;\r\n\r\nvar version = '2.2.2';\r\n\r\nvar compatible = (/^2\\./).test(Vue.version);\r\nif (!compatible) {\r\n  Vue.util.warn('VueClickaway ' + version + ' only supports Vue 2.x, and does not support Vue ' + Vue.version);\r\n}\r\n\r\n\r\n\r\n// @SECTION: implementation\r\n\r\nvar HANDLER = '_vue_clickaway_handler';\r\n\r\nfunction bind(el, binding, vnode) {\r\n  unbind(el);\r\n\r\n  var vm = vnode.context;\r\n\r\n  var callback = binding.value;\r\n  if (typeof callback !== 'function') {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      Vue.util.warn(\r\n        'v-' + binding.name + '=\"' +\r\n        binding.expression + '\" expects a function value, ' +\r\n        'got ' + callback\r\n      );\r\n    }\r\n    return;\r\n  }\r\n\r\n  // @NOTE: Vue binds directives in microtasks, while UI events are dispatched\r\n  //        in macrotasks. This causes the listener to be set up before\r\n  //        the \"origin\" click event (the event that lead to the binding of\r\n  //        the directive) arrives at the document root. To work around that,\r\n  //        we ignore events until the end of the \"initial\" macrotask.\r\n  // @REFERENCE: https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n  // @REFERENCE: https://github.com/simplesmiler/vue-clickaway/issues/8\r\n  var initialMacrotaskEnded = false;\r\n  setTimeout(function() {\r\n    initialMacrotaskEnded = true;\r\n  }, 0);\r\n\r\n  el[HANDLER] = function(ev) {\r\n    // @NOTE: this test used to be just `el.containts`, but working with path is better,\r\n    //        because it tests whether the element was there at the time of\r\n    //        the click, not whether it is there now, that the event has arrived\r\n    //        to the top.\r\n    // @NOTE: `.path` is non-standard, the standard way is `.composedPath()`\r\n    var path = ev.path || (ev.composedPath ? ev.composedPath() : undefined);\r\n    if (initialMacrotaskEnded && (path ? path.indexOf(el) < 0 : !el.contains(ev.target))) {\r\n      return callback.call(vm, ev);\r\n    }\r\n  };\r\n\r\n  document.documentElement.addEventListener('click', el[HANDLER], false);\r\n}\r\n\r\nfunction unbind(el) {\r\n  document.documentElement.removeEventListener('click', el[HANDLER], false);\r\n  delete el[HANDLER];\r\n}\r\n\r\nvar directive = {\r\n  bind: bind,\r\n  update: function(el, binding) {\r\n    if (binding.value === binding.oldValue) return;\r\n    bind(el, binding);\r\n  },\r\n  unbind: unbind,\r\n};\r\n\r\nvar mixin = {\r\n  directives: { onClickaway: directive },\r\n};\r\n\r\nexports.version = version;\r\nexports.directive = directive;\r\nexports.mixin = mixin;"],"mappings":"AAAA;;;;;;;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACAD,GAAG,GAAG,aAAaA,GAAb,GAAmBA,GAAG,CAAC,SAAD,CAAtB,GAAoCA,GAA1C;AAEA,IAAIE,OAAO,GAAG,OAAd;AAEA,IAAIC,UAAU,GAAI,MAAD,CAASC,IAAT,CAAcJ,GAAG,CAACE,OAAlB,CAAjB;;AACA,IAAI,CAACC,UAAL,EAAiB;EACfH,GAAG,CAACK,IAAJ,CAASC,IAAT,CAAc,kBAAkBJ,OAAlB,GAA4B,mDAA5B,GAAkFF,GAAG,CAACE,OAApG;AACD,C,CAID;;;AAEA,IAAIK,OAAO,GAAG,wBAAd;;AAEA,SAASC,IAAT,CAAcC,EAAd,EAAkBC,OAAlB,EAA2BC,KAA3B,EAAkC;EAChCC,MAAM,CAACH,EAAD,CAAN;EAEA,IAAII,EAAE,GAAGF,KAAK,CAACG,OAAf;EAEA,IAAIC,QAAQ,GAAGL,OAAO,CAACM,KAAvB;;EACA,IAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;IAClC,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzCnB,GAAG,CAACK,IAAJ,CAASC,IAAT,CACE,OAAOI,OAAO,CAACU,IAAf,GAAsB,IAAtB,GACAV,OAAO,CAACW,UADR,GACqB,8BADrB,GAEA,MAFA,GAESN,QAHX;IAKD;;IACD;EACD,CAf+B,CAiBhC;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,IAAIO,qBAAqB,GAAG,KAA5B;EACAC,UAAU,CAAC,YAAW;IACpBD,qBAAqB,GAAG,IAAxB;EACD,CAFS,EAEP,CAFO,CAAV;;EAIAb,EAAE,CAACF,OAAD,CAAF,GAAc,UAASiB,EAAT,EAAa;IACzB;IACA;IACA;IACA;IACA;IACA,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAH,KAAYD,EAAE,CAACE,YAAH,GAAkBF,EAAE,CAACE,YAAH,EAAlB,GAAsCC,SAAlD,CAAX;;IACA,IAAIL,qBAAqB,KAAKG,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAanB,EAAb,IAAmB,CAAtB,GAA0B,CAACA,EAAE,CAACoB,QAAH,CAAYL,EAAE,CAACM,MAAf,CAApC,CAAzB,EAAsF;MACpF,OAAOf,QAAQ,CAACgB,IAAT,CAAclB,EAAd,EAAkBW,EAAlB,CAAP;IACD;EACF,CAVD;;EAYAQ,QAAQ,CAACC,eAAT,CAAyBC,gBAAzB,CAA0C,OAA1C,EAAmDzB,EAAE,CAACF,OAAD,CAArD,EAAgE,KAAhE;AACD;;AAED,SAASK,MAAT,CAAgBH,EAAhB,EAAoB;EAClBuB,QAAQ,CAACC,eAAT,CAAyBE,mBAAzB,CAA6C,OAA7C,EAAsD1B,EAAE,CAACF,OAAD,CAAxD,EAAmE,KAAnE;EACA,OAAOE,EAAE,CAACF,OAAD,CAAT;AACD;;AAED,IAAI6B,SAAS,GAAG;EACd5B,IAAI,EAAEA,IADQ;EAEd6B,MAAM,EAAE,gBAAS5B,EAAT,EAAaC,OAAb,EAAsB;IAC5B,IAAIA,OAAO,CAACM,KAAR,KAAkBN,OAAO,CAAC4B,QAA9B,EAAwC;IACxC9B,IAAI,CAACC,EAAD,EAAKC,OAAL,CAAJ;EACD,CALa;EAMdE,MAAM,EAAEA;AANM,CAAhB;AASA,IAAI2B,KAAK,GAAG;EACVC,UAAU,EAAE;IAAEC,WAAW,EAAEL;EAAf;AADF,CAAZ;AAIAM,OAAO,CAACxC,OAAR,GAAkBA,OAAlB;AACAwC,OAAO,CAACN,SAAR,GAAoBA,SAApB;AACAM,OAAO,CAACH,KAAR,GAAgBA,KAAhB"},"metadata":{},"sourceType":"script"}