{"ast":null,"code":"import _regeneratorRuntime from \"C:/Hackathon/chunggyul/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Hackathon/chunggyul/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Hackathon/chunggyul/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from \"vuex\";\nvar memberStore = \"memberStore\";\nexport default {\n  name: \"MemberLogin\",\n  data: function data() {\n    return {\n      user: {\n        userid: null,\n        userpwd: null\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState(memberStore, [\"isLogin\", \"isLoginError\"])),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions(memberStore, [\"userConfirm\", \"getUserInfo\"])), mapActions(\"houseStore\", [\"getLikeApt\"])), {}, {\n    confirm: function confirm() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.userConfirm(_this.user);\n\n              case 2:\n                token = sessionStorage.getItem(\"access-token\");\n\n                if (!_this.isLogin) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 6;\n                return _this.getUserInfo(token);\n\n              case 6:\n                _this.$router.push({\n                  name: \"home\"\n                });\n\n                _this.getLikeApt(_this.user.userid);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    movePage: function movePage() {\n      this.$router.push({\n        name: \"signUp\"\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AAEA;AAEA;EACAA,mBADA;EAEAC,IAFA,kBAEA;IACA;MACAC;QACAC,YADA;QAEAC;MAFA;IADA;EAMA,CATA;EAUAC,4BACAC,kDADA,CAVA;EAaAC,uDACAC,uDADA,GAEAA,wCAFA;IAGAC,OAHA,qBAGA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,6BADA;;cAAA;gBAEAC,KAFA,GAEAC,sCAFA;;gBAAA,KAGA,aAHA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAIA,wBAJA;;cAAA;gBAKA;kBAAAX;gBAAA;;gBACA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CAXA;IAYAY,QAZA,sBAYA;MACA;QAAAZ;MAAA;IACA;EAdA;AAbA","names":["name","data","user","userid","userpwd","computed","mapState","methods","mapActions","confirm","token","sessionStorage","movePage"],"sourceRoot":"src/pages","sources":["LoginPage.vue"],"sourcesContent":["<template>\r\n  <b-container class=\"bv-example-row mt-3\">\r\n    <b-row>\r\n      <b-col>\r\n        <b-alert variant=\"secondary\" show><h3>로그인</h3></b-alert>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row>\r\n      <b-col></b-col>\r\n      <b-col cols=\"8\">\r\n        <b-card class=\"text-center mt-3\" style=\"max-width: 40rem\" align=\"left\">\r\n          <b-form class=\"text-left\">\r\n            <b-alert show variant=\"danger\" v-if=\"isLoginError\"\r\n              >아이디 또는 비밀번호를 확인하세요.</b-alert\r\n            >\r\n            <b-form-group label=\"아이디:\" label-for=\"userid\">\r\n              <b-form-input\r\n                id=\"userid\"\r\n                v-model=\"user.userid\"\r\n                required\r\n                placeholder=\"아이디 입력....\"\r\n                @keyup.enter=\"confirm\"\r\n              ></b-form-input>\r\n            </b-form-group>\r\n            <b-form-group label=\"비밀번호:\" label-for=\"userpwd\">\r\n              <b-form-input\r\n                type=\"password\"\r\n                id=\"userpwd\"\r\n                v-model=\"user.userpwd\"\r\n                required\r\n                placeholder=\"비밀번호 입력....\"\r\n                @keyup.enter=\"confirm\"\r\n              ></b-form-input>\r\n            </b-form-group>\r\n            <b-button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              class=\"m-1\"\r\n              @click=\"confirm\"\r\n              >로그인</b-button\r\n            >\r\n            <b-button\r\n              type=\"button\"\r\n              variant=\"success\"\r\n              class=\"m-1\"\r\n              @click=\"movePage\"\r\n              >회원가입</b-button\r\n            >\r\n          </b-form>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col></b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from \"vuex\";\r\n\r\nconst memberStore = \"memberStore\";\r\n\r\nexport default {\r\n  name: \"MemberLogin\",\r\n  data() {\r\n    return {\r\n      user: {\r\n        userid: null,\r\n        userpwd: null,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(memberStore, [\"isLogin\", \"isLoginError\"]),\r\n  },\r\n  methods: {\r\n    ...mapActions(memberStore, [\"userConfirm\", \"getUserInfo\"]),\r\n    ...mapActions(\"houseStore\", [\"getLikeApt\"]),\r\n    async confirm() {\r\n      await this.userConfirm(this.user);\r\n      let token = sessionStorage.getItem(\"access-token\");\r\n      if (this.isLogin) {\r\n        await this.getUserInfo(token);\r\n        this.$router.push({ name: \"home\" });\r\n        this.getLikeApt(this.user.userid);\r\n      }\r\n    },\r\n    movePage() {\r\n      this.$router.push({ name: \"signUp\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}