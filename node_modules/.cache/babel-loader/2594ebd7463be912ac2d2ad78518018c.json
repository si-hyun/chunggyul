{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.splice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MovingArrow from \"./MovingArrow.vue\";\nimport SidebarLink from \"./SidebarLink\";\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"청귤\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: function validator(value) {\n        var acceptedValues = [\"white\", \"black\", \"darkblue\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: function validator(value) {\n        var acceptedValues = [\"primary\", \"info\", \"success\", \"warning\", \"danger\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    sidebarLinks: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  provide: function provide() {\n    return {\n      autoClose: this.autoClose,\n      addLink: this.addLink,\n      removeLink: this.removeLink\n    };\n  },\n  components: {\n    MovingArrow: MovingArrow,\n    SidebarLink: SidebarLink\n  },\n  computed: {\n    /**\n     * Styles to animate the arrow near the current active sidebar link\n     * @returns {{transform: string}}\n     */\n    arrowMovePx: function arrowMovePx() {\n      return this.linkHeight * this.activeLinkIndex;\n    }\n  },\n  data: function data() {\n    return {\n      linkHeight: 65,\n      activeLinkIndex: 0,\n      windowWidth: 0,\n      isWindows: false,\n      hasAutoHeight: false,\n      links: []\n    };\n  },\n  methods: {\n    findActiveLink: function findActiveLink() {\n      var _this = this;\n\n      this.links.forEach(function (link, index) {\n        if (link.isActive()) {\n          _this.activeLinkIndex = index;\n        }\n      });\n    },\n    addLink: function addLink(link) {\n      var index = this.$slots.links.indexOf(link.$vnode);\n      this.links.splice(index, 0, link);\n    },\n    removeLink: function removeLink(link) {\n      var index = this.links.indexOf(link);\n\n      if (index > -1) {\n        this.links.splice(index, 1);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$watch(\"$route\", this.findActiveLink, {\n      immediate: true\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;EACAA;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC,gBAFA;MAGAE;QACA;QACA;MACA;IANA,CALA;IAaAC;MACAJ,YADA;MAEAC,kBAFA;MAGAE;QACA,sBACA,SADA,EAEA,MAFA,EAGA,SAHA,EAIA,SAJA,EAKA,QALA;QAOA;MACA;IAZA,CAbA;IA2BAE;MACAL,WADA;MAEAC;QAAA;MAAA;IAFA,CA3BA;IA+BAK;MACAN,aADA;MAEAC;IAFA;EA/BA,CADA;EAqCAM,OArCA,qBAqCA;IACA;MACAD,yBADA;MAEAE,qBAFA;MAGAC;IAHA;EAKA,CA3CA;EA4CAC;IACAC,wBADA;IAEAC;EAFA,CA5CA;EAgDAC;IACA;AACA;AACA;AACA;IACAC,WALA,yBAKA;MACA;IACA;EAPA,CAhDA;EAyDAC,IAzDA,kBAyDA;IACA;MACAC,cADA;MAEAC,kBAFA;MAGAC,cAHA;MAIAC,gBAJA;MAKAC,oBALA;MAMAC;IANA;EAQA,CAlEA;EAmEAC;IACAC,cADA,4BACA;MAAA;;MACA;QACA;UACA;QACA;MACA,CAJA;IAKA,CAPA;IAQAf,OARA,mBAQAgB,IARA,EAQA;MACA;MACA;IACA,CAXA;IAYAf,UAZA,sBAYAe,IAZA,EAYA;MACA;;MACA;QACA;MACA;IACA;EAjBA,CAnEA;EAsFAC,OAtFA,qBAsFA;IACA;MACAC;IADA;EAGA;AA1FA","names":["props","title","type","default","backgroundColor","validator","activeColor","sidebarLinks","autoClose","provide","addLink","removeLink","components","MovingArrow","SidebarLink","computed","arrowMovePx","data","linkHeight","activeLinkIndex","windowWidth","isWindows","hasAutoHeight","links","methods","findActiveLink","link","mounted","immediate"],"sourceRoot":"src/components/SidebarPlugin","sources":["SideBar.vue"],"sourcesContent":["<template>\n  <div\n    class=\"sidebar\"\n    :data-background-color=\"backgroundColor\"\n    :data-active-color=\"activeColor\"\n  >\n    <!--\n            Tip 1: you can change the color of the sidebar's background using: data-background-color=\"white | black | darkblue\"\n            Tip 2: you can change the color of the active button using the data-active-color=\"primary | info | success | warning | danger\"\n        -->\n    <!-- -->\n    <div class=\"sidebar-wrapper\" id=\"style-3\">\n      <div class=\"logo\">\n        <a\n          href=\"#\"\n          class=\"simple-text\"\n          style=\"font-size: 60px; text-decoration: none\"\n        >\n          <div class=\"logo-img\">\n            <img src=\"@/assets/img/chunggyul_logo4.png\" alt=\"\" />\n          </div>\n            </p>{{ title }}\n          <p>\n        </a>\n      </div>\n      <slot> </slot>\n      <ul class=\"nav\">\n        <!--By default vue-router adds an active class to each route link. This way the links are colored when clicked-->\n        <slot name=\"links\">\n          <sidebar-link\n            v-for=\"(link, index) in sidebarLinks\"\n            :key=\"index\"\n            :to=\"link.path\"\n            :name=\"link.name\"\n            :icon=\"link.icon\"\n          >\n          </sidebar-link>\n        </slot>\n      </ul>\n      <moving-arrow :move-y=\"arrowMovePx\"> </moving-arrow>\n    </div>\n  </div>\n</template>\n<script>\nimport MovingArrow from \"./MovingArrow.vue\";\nimport SidebarLink from \"./SidebarLink\";\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"청귤\",\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: (value) => {\n        let acceptedValues = [\"white\", \"black\", \"darkblue\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: (value) => {\n        let acceptedValues = [\n          \"primary\",\n          \"info\",\n          \"success\",\n          \"warning\",\n          \"danger\",\n        ];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => [],\n    },\n    autoClose: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose,\n      addLink: this.addLink,\n      removeLink: this.removeLink,\n    };\n  },\n  components: {\n    MovingArrow,\n    SidebarLink,\n  },\n  computed: {\n    /**\n     * Styles to animate the arrow near the current active sidebar link\n     * @returns {{transform: string}}\n     */\n    arrowMovePx() {\n      return this.linkHeight * this.activeLinkIndex;\n    },\n  },\n  data() {\n    return {\n      linkHeight: 65,\n      activeLinkIndex: 0,\n      windowWidth: 0,\n      isWindows: false,\n      hasAutoHeight: false,\n      links: [],\n    };\n  },\n  methods: {\n    findActiveLink() {\n      this.links.forEach((link, index) => {\n        if (link.isActive()) {\n          this.activeLinkIndex = index;\n        }\n      });\n    },\n    addLink(link) {\n      const index = this.$slots.links.indexOf(link.$vnode);\n      this.links.splice(index, 0, link);\n    },\n    removeLink(link) {\n      const index = this.links.indexOf(link);\n      if (index > -1) {\n        this.links.splice(index, 1);\n      }\n    },\n  },\n  mounted() {\n    this.$watch(\"$route\", this.findActiveLink, {\n      immediate: true,\n    });\n  },\n};\n</script>\n<style>\n.wrapper .sidebar .logo .simple-text .logo-img img {\n  max-width: 80px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}