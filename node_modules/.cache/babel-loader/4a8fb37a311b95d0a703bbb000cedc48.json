{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NotificationTemplate from './Notifications/NotificationTemplate';\nexport default {\n  data: function data() {\n    return {\n      type: [\"\", \"info\", \"success\", \"warning\", \"danger\"],\n      notifications: {\n        topCenter: false\n      }\n    };\n  },\n  methods: {\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        icon: \"ti-gift\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: this.type[color]\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AAEA;EACAA,IADA,kBACA;IACA;MACAC,kDADA;MAEAC;QACAC;MADA;IAFA;EAMA,CARA;EASAC;IACAC,SADA,qBACAC,aADA,EACAC,eADA,EACA;MACA;MACA;QACAC,+BADA;QAEAC,eAFA;QAGAF,gCAHA;QAIAD,4BAJA;QAKAL;MALA;IAOA;EAVA;AATA","names":["data","type","notifications","topCenter","methods","notifyVue","verticalAlign","horizontalAlign","component","icon"],"sourceRoot":"src/pages","sources":["Notifications.vue"],"sourcesContent":["<template>\n  <card title=\"Notifications\" sub-title=\"Custom Vue notifications plugin\">\n    <div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <h5>Notifications Style</h5>\n          <div class=\"alert alert-info\">\n            <span>This is a plain notification</span>\n          </div>\n          <div class=\"alert alert-info\">\n            <button type=\"button\" aria-hidden=\"true\" class=\"close\">×</button>\n            <span>This is a notification with close button.</span>\n          </div>\n          <div class=\"alert alert-info alert-with-icon\" data-notify=\"container\">\n            <button type=\"button\" aria-hidden=\"true\" class=\"close\">×</button>\n            <span data-notify=\"icon\" class=\"ti-bell\"></span>\n            <span data-notify=\"message\">This is a notification with close button and icon.</span>\n          </div>\n          <div class=\"alert alert-info alert-with-icon\" data-notify=\"container\">\n            <button type=\"button\" aria-hidden=\"true\" class=\"close\">×</button>\n            <span data-notify=\"icon\" class=\"ti-pie-chart\"></span>\n            <span data-notify=\"message\">This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.</span>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <h5>Notification states</h5>\n          <div class=\"alert alert-info\">\n            <button type=\"button\" aria-hidden=\"true\" class=\"close\">×</button>\n            <span>\n              <b> Info - </b> This is a regular notification made with \".alert-info\"</span>\n          </div>\n          <div class=\"alert alert-success\">\n            <button type=\"button\" aria-hidden=\"true\" class=\"close\">×</button>\n            <span>\n              <b> Success - </b> This is a regular notification made with \".alert-success\"</span>\n          </div>\n          <div class=\"alert alert-warning\">\n            <button type=\"button\" aria-hidden=\"true\" class=\"close\">×</button>\n            <span>\n              <b> Warning - </b> This is a regular notification made with \".alert-warning\"</span>\n          </div>\n          <div class=\"alert alert-danger\">\n            <button type=\"button\" aria-hidden=\"true\" class=\"close\">×</button>\n            <span>\n              <b> Danger - </b> This is a regular notification made with \".alert-danger\"</span>\n          </div>\n        </div>\n      </div>\n\n      <br>\n      <br>\n\n      <div class=\"places-buttons\">\n        <div class=\"row d-flex justify-content-center\">\n          <div>\n            <h5>Notifications Places\n              <p class=\"category\">Click to view notifications</p>\n            </h5>\n          </div>\n        </div>\n        <div class=\"row d-flex justify-content-center\">\n          <div class=\"col-md-3\">\n            <p-button round outline block @click.native=\"notifyVue('top', 'left')\">Top Left</p-button>\n          </div>\n          <div class=\"col-md-3\">\n            <p-button round outline block @click.native=\"notifyVue('top', 'center')\">Top Center</p-button>\n          </div>\n          <div class=\"col-md-3\">\n            <p-button round outline block @click.native=\"notifyVue('top', 'right')\">Top Right</p-button>\n          </div>\n        </div>\n        <div class=\"row d-flex justify-content-center\">\n          <div class=\"col-md-3\">\n            <p-button round outline block @click.native=\"notifyVue('bottom', 'left')\">Bottom Left</p-button>\n          </div>\n          <div class=\"col-md-3\">\n            <p-button round outline block @click.native=\"notifyVue('bottom', 'center')\">Bottom Center</p-button>\n          </div>\n          <div class=\"col-md-3\">\n            <p-button round outline block @click.native=\"notifyVue('bottom', 'right')\">Bottom Right</p-button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </card>\n</template>\n<script>\nimport NotificationTemplate from './Notifications/NotificationTemplate';\n\nexport default {\n  data() {\n    return {\n      type: [\"\", \"info\", \"success\", \"warning\", \"danger\"],\n      notifications: {\n        topCenter: false\n      }\n    };\n  },\n  methods: {\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        icon: \"ti-gift\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: this.type[color]\n      });\n    }\n  }\n};\n</script>\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}