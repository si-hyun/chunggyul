{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      type: \"month\",\n      types: [\"month\", \"week\", \"day\", \"4day\"],\n      mode: \"stack\",\n      modes: [\"stack\", \"column\"],\n      weekday: [0, 1, 2, 3, 4, 5, 6],\n      weekdays: [{\n        text: \"Sun - Sat\",\n        value: [0, 1, 2, 3, 4, 5, 6]\n      }, {\n        text: \"Mon - Sun\",\n        value: [1, 2, 3, 4, 5, 6, 0]\n      }, {\n        text: \"Mon - Fri\",\n        value: [1, 2, 3, 4, 5]\n      }, {\n        text: \"Mon, Wed, Fri\",\n        value: [1, 3, 5]\n      }],\n      value: \"\",\n      events: [],\n      colors: [\"blue\", \"indigo\", \"deep-purple\", \"cyan\", \"green\", \"orange\", \"grey darken-1\"],\n      names: [\"Meeting\", \"Holiday\", \"PTO\", \"Travel\", \"Event\", \"Birthday\", \"Conference\", \"Party\"]\n    };\n  },\n  methods: {\n    getEvents: function getEvents(_ref) {\n      var start = _ref.start,\n          end = _ref.end;\n      var events = [];\n      var min = new Date(\"\".concat(start.date, \"T00:00:00\"));\n      var max = new Date(\"\".concat(end.date, \"T23:59:59\"));\n      var days = (max.getTime() - min.getTime()) / 86400000;\n      var eventCount = this.rnd(days, days + 20);\n\n      for (var i = 0; i < eventCount; i++) {\n        var allDay = this.rnd(0, 3) === 0;\n        var firstTimestamp = this.rnd(min.getTime(), max.getTime());\n        var first = new Date(firstTimestamp - firstTimestamp % 900000);\n        var secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000;\n        var second = new Date(first.getTime() + secondTimestamp);\n        events.push({\n          name: this.names[this.rnd(0, this.names.length - 1)],\n          start: first,\n          end: second,\n          color: this.colors[this.rnd(0, this.colors.length - 1)],\n          timed: !allDay\n        });\n      }\n\n      this.events = events;\n    },\n    getEventColor: function getEventColor(event) {\n      return event.color;\n    },\n    rnd: function rnd(a, b) {\n      return Math.floor((b - a + 1) * Math.random()) + a;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;EACAA;IAAA;MACAC,aADA;MAEAC,uCAFA;MAGAC,aAHA;MAIAC,0BAJA;MAKAC,8BALA;MAMAC,WACA;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAD;QAAAC;MAAA,CAFA,EAGA;QAAAD;QAAAC;MAAA,CAHA,EAIA;QAAAD;QAAAC;MAAA,CAJA,CANA;MAYAA,SAZA;MAaAC,UAbA;MAcAC,SACA,MADA,EAEA,QAFA,EAGA,aAHA,EAIA,MAJA,EAKA,OALA,EAMA,QANA,EAOA,eAPA,CAdA;MAuBAC,QACA,SADA,EAEA,SAFA,EAGA,KAHA,EAIA,QAJA,EAKA,OALA,EAMA,UANA,EAOA,YAPA,EAQA,OARA;IAvBA;EAAA,CADA;EAmCAC;IACAC,SADA,2BACA;MAAA;MAAA;MACA;MAEA;MACA;MACA;MACA;;MAEA;QACA;QACA;QACA;QACA;QACA;QAEAJ;UACAK,oDADA;UAEAC,YAFA;UAGAC,WAHA;UAIAC,uDAJA;UAKAC;QALA;MAOA;;MAEA;IACA,CA1BA;IA2BAC,aA3BA,yBA2BAC,KA3BA,EA2BA;MACA;IACA,CA7BA;IA8BAC,GA9BA,eA8BAC,CA9BA,EA8BAC,CA9BA,EA8BA;MACA;IACA;EAhCA;AAnCA","names":["data","type","types","mode","modes","weekday","weekdays","text","value","events","colors","names","methods","getEvents","name","start","end","color","timed","getEventColor","event","rnd","a","b"],"sourceRoot":"src/pages","sources":["PolicyPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-sheet tile height=\"54\" class=\"d-flex\">\r\n      <v-btn icon class=\"ma-2\" @click=\"$refs.calendar.prev()\">\r\n        <v-icon>mdi-chevron-left</v-icon>\r\n      </v-btn>\r\n      <v-select\r\n        v-model=\"type\"\r\n        :items=\"types\"\r\n        dense\r\n        outlined\r\n        hide-details\r\n        class=\"ma-2\"\r\n        label=\"type\"\r\n      ></v-select>\r\n      <v-select\r\n        v-model=\"mode\"\r\n        :items=\"modes\"\r\n        dense\r\n        outlined\r\n        hide-details\r\n        label=\"event-overlap-mode\"\r\n        class=\"ma-2\"\r\n      ></v-select>\r\n      <v-select\r\n        v-model=\"weekday\"\r\n        :items=\"weekdays\"\r\n        dense\r\n        outlined\r\n        hide-details\r\n        label=\"weekdays\"\r\n        class=\"ma-2\"\r\n      ></v-select>\r\n      <v-spacer></v-spacer>\r\n      <v-btn icon class=\"ma-2\" @click=\"$refs.calendar.next()\">\r\n        <v-icon>mdi-chevron-right</v-icon>\r\n      </v-btn>\r\n    </v-sheet>\r\n    <v-sheet height=\"600\">\r\n      <v-calendar\r\n        ref=\"calendar\"\r\n        v-model=\"value\"\r\n        :weekdays=\"weekday\"\r\n        :type=\"type\"\r\n        :events=\"events\"\r\n        :event-overlap-mode=\"mode\"\r\n        :event-overlap-threshold=\"30\"\r\n        :event-color=\"getEventColor\"\r\n        @change=\"getEvents\"\r\n      ></v-calendar>\r\n    </v-sheet>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data: () => ({\r\n    type: \"month\",\r\n    types: [\"month\", \"week\", \"day\", \"4day\"],\r\n    mode: \"stack\",\r\n    modes: [\"stack\", \"column\"],\r\n    weekday: [0, 1, 2, 3, 4, 5, 6],\r\n    weekdays: [\r\n      { text: \"Sun - Sat\", value: [0, 1, 2, 3, 4, 5, 6] },\r\n      { text: \"Mon - Sun\", value: [1, 2, 3, 4, 5, 6, 0] },\r\n      { text: \"Mon - Fri\", value: [1, 2, 3, 4, 5] },\r\n      { text: \"Mon, Wed, Fri\", value: [1, 3, 5] },\r\n    ],\r\n    value: \"\",\r\n    events: [],\r\n    colors: [\r\n      \"blue\",\r\n      \"indigo\",\r\n      \"deep-purple\",\r\n      \"cyan\",\r\n      \"green\",\r\n      \"orange\",\r\n      \"grey darken-1\",\r\n    ],\r\n    names: [\r\n      \"Meeting\",\r\n      \"Holiday\",\r\n      \"PTO\",\r\n      \"Travel\",\r\n      \"Event\",\r\n      \"Birthday\",\r\n      \"Conference\",\r\n      \"Party\",\r\n    ],\r\n  }),\r\n  methods: {\r\n    getEvents({ start, end }) {\r\n      const events = [];\r\n\r\n      const min = new Date(`${start.date}T00:00:00`);\r\n      const max = new Date(`${end.date}T23:59:59`);\r\n      const days = (max.getTime() - min.getTime()) / 86400000;\r\n      const eventCount = this.rnd(days, days + 20);\r\n\r\n      for (let i = 0; i < eventCount; i++) {\r\n        const allDay = this.rnd(0, 3) === 0;\r\n        const firstTimestamp = this.rnd(min.getTime(), max.getTime());\r\n        const first = new Date(firstTimestamp - (firstTimestamp % 900000));\r\n        const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000;\r\n        const second = new Date(first.getTime() + secondTimestamp);\r\n\r\n        events.push({\r\n          name: this.names[this.rnd(0, this.names.length - 1)],\r\n          start: first,\r\n          end: second,\r\n          color: this.colors[this.rnd(0, this.colors.length - 1)],\r\n          timed: !allDay,\r\n        });\r\n      }\r\n\r\n      this.events = events;\r\n    },\r\n    getEventColor(event) {\r\n      return event.color;\r\n    },\r\n    rnd(a, b) {\r\n      return Math.floor((b - a + 1) * Math.random()) + a;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}