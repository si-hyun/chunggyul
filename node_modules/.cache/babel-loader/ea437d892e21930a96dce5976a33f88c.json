{"ast":null,"code":"import _regeneratorRuntime from \"C:/Hackathon/chunggyul/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Hackathon/chunggyul/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { login } from \"@/api/customer.js\";\nvar customerStore = {\n  namespaced: true,\n  state: {\n    isLogin: false,\n    isLoginError: false,\n    customerInfo: null\n  },\n  getters: {\n    checkUserInfo: function checkUserInfo(state) {\n      return state.customerInfo;\n    }\n  },\n  mutations: {\n    SET_IS_LOGIN: function SET_IS_LOGIN(state, isLogin) {\n      state.isLogin = isLogin;\n    },\n    SET_IS_LOGIN_ERROR: function SET_IS_LOGIN_ERROR(state, isLoginError) {\n      state.isLoginError = isLoginError;\n    },\n    SET_CUSTOMER_INFO: function SET_CUSTOMER_INFO(state, customerInfo) {\n      state.isLogin = true;\n      state.customerInfo = customerInfo;\n    }\n  },\n  actions: {\n    customerConfirm: function customerConfirm(_ref, customer) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                console.log(customer);\n                _context.next = 4;\n                return login(customer, function (response) {\n                  if (response.data.message === \"success\") {\n                    commit(\"SET_IS_LOGIN\", true);\n                    commit(\"SET_IS_LOGIN_ERROR\", false);\n                    commit(\"SET_CUSTOMER_INFO\", response.data.customerInfo);\n                  } else {\n                    commit(\"SET_IS_LOGIN\", false);\n                    commit(\"SET_IS_LOGIN_ERROR\", true);\n                    console.log(\"유저 정보 없음!!\");\n                  }\n                }, function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};\nexport default customerStore;","map":{"version":3,"names":["login","customerStore","namespaced","state","isLogin","isLoginError","customerInfo","getters","checkUserInfo","mutations","SET_IS_LOGIN","SET_IS_LOGIN_ERROR","SET_CUSTOMER_INFO","actions","customerConfirm","customer","commit","console","log","response","data","message","error"],"sources":["C:/Hackathon/chunggyul/src/store/modules/customerStore.js"],"sourcesContent":["import { login } from \"@/api/customer.js\";\r\n\r\nconst customerStore = {\r\n  namespaced: true,\r\n  state: {\r\n    isLogin: false,\r\n    isLoginError: false,\r\n    customerInfo: null,\r\n  },\r\n  getters: {\r\n    checkUserInfo: function (state) {\r\n      return state.customerInfo;\r\n    },\r\n  },\r\n  mutations: {\r\n    SET_IS_LOGIN: (state, isLogin) => {\r\n      state.isLogin = isLogin;\r\n    },\r\n    SET_IS_LOGIN_ERROR: (state, isLoginError) => {\r\n      state.isLoginError = isLoginError;\r\n    },\r\n    SET_CUSTOMER_INFO: (state, customerInfo) => {\r\n      state.isLogin = true;\r\n      state.customerInfo = customerInfo;\r\n    },\r\n  },\r\n  actions: {\r\n    async customerConfirm({ commit }, customer) {\r\n      console.log(customer);\r\n      await login(\r\n        customer,\r\n        (response) => {\r\n          if (response.data.message === \"success\") {\r\n            commit(\"SET_IS_LOGIN\", true);\r\n            commit(\"SET_IS_LOGIN_ERROR\", false);\r\n            commit(\"SET_CUSTOMER_INFO\", response.data.customerInfo);\r\n          } else {\r\n            commit(\"SET_IS_LOGIN\", false);\r\n            commit(\"SET_IS_LOGIN_ERROR\", true);\r\n            console.log(\"유저 정보 없음!!\");\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n\r\nexport default customerStore;\r\n"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,mBAAtB;AAEA,IAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,IADQ;EAEpBC,KAAK,EAAE;IACLC,OAAO,EAAE,KADJ;IAELC,YAAY,EAAE,KAFT;IAGLC,YAAY,EAAE;EAHT,CAFa;EAOpBC,OAAO,EAAE;IACPC,aAAa,EAAE,uBAAUL,KAAV,EAAiB;MAC9B,OAAOA,KAAK,CAACG,YAAb;IACD;EAHM,CAPW;EAYpBG,SAAS,EAAE;IACTC,YAAY,EAAE,sBAACP,KAAD,EAAQC,OAAR,EAAoB;MAChCD,KAAK,CAACC,OAAN,GAAgBA,OAAhB;IACD,CAHQ;IAITO,kBAAkB,EAAE,4BAACR,KAAD,EAAQE,YAAR,EAAyB;MAC3CF,KAAK,CAACE,YAAN,GAAqBA,YAArB;IACD,CANQ;IAOTO,iBAAiB,EAAE,2BAACT,KAAD,EAAQG,YAAR,EAAyB;MAC1CH,KAAK,CAACC,OAAN,GAAgB,IAAhB;MACAD,KAAK,CAACG,YAAN,GAAqBA,YAArB;IACD;EAVQ,CAZS;EAwBpBO,OAAO,EAAE;IACDC,eADC,iCAC2BC,QAD3B,EACqC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAApBC,MAAoB,QAApBA,MAAoB;gBAC1CC,OAAO,CAACC,GAAR,CAAYH,QAAZ;gBAD0C;gBAAA,OAEpCf,KAAK,CACTe,QADS,EAET,UAACI,QAAD,EAAc;kBACZ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,SAA9B,EAAyC;oBACvCL,MAAM,CAAC,cAAD,EAAiB,IAAjB,CAAN;oBACAA,MAAM,CAAC,oBAAD,EAAuB,KAAvB,CAAN;oBACAA,MAAM,CAAC,mBAAD,EAAsBG,QAAQ,CAACC,IAAT,CAAcd,YAApC,CAAN;kBACD,CAJD,MAIO;oBACLU,MAAM,CAAC,cAAD,EAAiB,KAAjB,CAAN;oBACAA,MAAM,CAAC,oBAAD,EAAuB,IAAvB,CAAN;oBACAC,OAAO,CAACC,GAAR,CAAY,YAAZ;kBACD;gBACF,CAZQ,EAaT,UAACI,KAAD,EAAW;kBACTL,OAAO,CAACC,GAAR,CAAYI,KAAZ;gBACD,CAfQ,CAF+B;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAmB3C;EApBM;AAxBW,CAAtB;AAgDA,eAAerB,aAAf"},"metadata":{},"sourceType":"module"}